{
  "preamble": {
    "title": "socious-io/aiken",
    "version": "0.0.0",
    "plutusVersion": "v3",
    "compiler": {
      "name": "Aiken",
      "version": "v1.1.9+2217206"
    },
    "license": "N/A"
  },
  "validators": [
    {
      "title": "escrow.escrow.spend",
      "datum": {
        "title": "datum",
        "schema": {
          "$ref": "#/definitions/escrow~1types~1Datum"
        }
      },
      "redeemer": {
        "title": "redeemer",
        "schema": {
          "$ref": "#/definitions/escrow~1types~1Redeemer"
        }
      },
      "compiledCode": "59013d01010032323232323225333002323232323253330073370e900118041baa0011323322323232533300d300300115333010300f37540100042c2a66601a66e1d200200115333010300f37540100042c2c601a6ea801c54ccc02cc004c030dd50010991919191919192999809180418099baa00d15333012330013758600460286ea80380105288998009bac30023014375401c00a2660026eb0c008c050dd500700291191980080080191299980c0008a501332253330173371e00400a29444cc010010004dd7180c800980d0009180a980b180b180b180b180b180b180b180b0009bac30133014003375c60240046eb8c044008c044004c034dd5180798069baa00216370e900018060009806180680098049baa00116300a300b0033009002300800230080013004375400229309b2b2b9a5573aaae7955cfaba15745",
      "hash": "284ae614db740c411a9821f876e6f9e7e5d2e285d9c0158c4c93173e"
    },
    {
      "title": "escrow.escrow.else",
      "redeemer": {
        "schema": {}
      },
      "compiledCode": "59013d01010032323232323225333002323232323253330073370e900118041baa0011323322323232533300d300300115333010300f37540100042c2a66601a66e1d200200115333010300f37540100042c2c601a6ea801c54ccc02cc004c030dd50010991919191919192999809180418099baa00d15333012330013758600460286ea80380105288998009bac30023014375401c00a2660026eb0c008c050dd500700291191980080080191299980c0008a501332253330173371e00400a29444cc010010004dd7180c800980d0009180a980b180b180b180b180b180b180b180b0009bac30133014003375c60240046eb8c044008c044004c034dd5180798069baa00216370e900018060009806180680098049baa00116300a300b0033009002300800230080013004375400229309b2b2b9a5573aaae7955cfaba15745",
      "hash": "284ae614db740c411a9821f876e6f9e7e5d2e285d9c0158c4c93173e"
    }
  ],
  "definitions": {
    "Int": {
      "dataType": "integer"
    },
    "List$escrow/types/Payout": {
      "dataType": "list",
      "items": {
        "$ref": "#/definitions/escrow~1types~1Payout"
      }
    },
    "Option$StakeCredential": {
      "title": "Option",
      "anyOf": [
        {
          "title": "Some",
          "description": "An optional value.",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/StakeCredential"
            }
          ]
        },
        {
          "title": "None",
          "description": "Nothing.",
          "dataType": "constructor",
          "index": 1,
          "fields": []
        }
      ]
    },
    "PaymentCredential": {
      "title": "PaymentCredential",
      "description": "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
      "anyOf": [
        {
          "title": "VerificationKey",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/VerificationKeyHash"
            }
          ]
        },
        {
          "title": "Script",
          "dataType": "constructor",
          "index": 1,
          "fields": [
            {
              "$ref": "#/definitions/ScriptHash"
            }
          ]
        }
      ]
    },
    "ScriptHash": {
      "title": "ScriptHash",
      "dataType": "bytes"
    },
    "StakeCredential": {
      "title": "StakeCredential",
      "description": "Represent a type of object that can be represented either inline (by hash)\n or via a reference (i.e. a pointer to an on-chain location).\n\n This is mainly use for capturing pointers to a stake credential\n registration certificate in the case of so-called pointer addresses.",
      "anyOf": [
        {
          "title": "Inline",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/cardano~1address~1Credential"
            }
          ]
        },
        {
          "title": "Pointer",
          "dataType": "constructor",
          "index": 1,
          "fields": [
            {
              "title": "slot_number",
              "$ref": "#/definitions/Int"
            },
            {
              "title": "transaction_index",
              "$ref": "#/definitions/Int"
            },
            {
              "title": "certificate_index",
              "$ref": "#/definitions/Int"
            }
          ]
        }
      ]
    },
    "VerificationKeyHash": {
      "title": "VerificationKeyHash",
      "dataType": "bytes"
    },
    "cardano/address/Address": {
      "title": "Address",
      "description": "A Cardano `Address` typically holding one or two credential references.\n\n Note that legacy bootstrap addresses (a.k.a. 'Byron addresses') are\n completely excluded from Plutus contexts. Thus, from an on-chain\n perspective only exists addresses of type 00, 01, ..., 07 as detailed\n in [CIP-0019 :: Shelley Addresses](https://github.com/cardano-foundation/CIPs/tree/master/CIP-0019/#shelley-addresses).",
      "anyOf": [
        {
          "title": "Address",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "payment_credential",
              "$ref": "#/definitions/PaymentCredential"
            },
            {
              "title": "stake_credential",
              "$ref": "#/definitions/Option$StakeCredential"
            }
          ]
        }
      ]
    },
    "cardano/address/Credential": {
      "title": "Credential",
      "description": "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
      "anyOf": [
        {
          "title": "VerificationKey",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/VerificationKeyHash"
            }
          ]
        },
        {
          "title": "Script",
          "dataType": "constructor",
          "index": 1,
          "fields": [
            {
              "$ref": "#/definitions/ScriptHash"
            }
          ]
        }
      ]
    },
    "escrow/types/Datum": {
      "title": "Datum",
      "anyOf": [
        {
          "title": "Datum",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "admin",
              "$ref": "#/definitions/VerificationKeyHash"
            },
            {
              "title": "owner",
              "$ref": "#/definitions/VerificationKeyHash"
            },
            {
              "title": "payouts",
              "$ref": "#/definitions/List$escrow~1types~1Payout"
            }
          ]
        }
      ]
    },
    "escrow/types/Payout": {
      "title": "Payout",
      "anyOf": [
        {
          "title": "Payout",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "address",
              "$ref": "#/definitions/cardano~1address~1Address"
            },
            {
              "title": "amount",
              "$ref": "#/definitions/Int"
            }
          ]
        }
      ]
    },
    "escrow/types/Redeemer": {
      "title": "Redeemer",
      "anyOf": [
        {
          "title": "Release",
          "dataType": "constructor",
          "index": 0,
          "fields": []
        },
        {
          "title": "Refund",
          "dataType": "constructor",
          "index": 1,
          "fields": []
        }
      ]
    }
  }
}